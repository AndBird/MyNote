1.链接JavaScript
在html文档中，通过链接来使用JavaScript脚本文件(即使用src属性)，就不再执行位于<script>...</script>标记间的脚本了。

2.浮点数
浮点数指数形式时，指数部分的位数不得超过3位，而且必须是整数。

3.基本数据类型转字符串(toString(),String())
布尔型转字符串:只有"true" 和"false"两个字符串
数值型转字符串:
特殊数据类型转字符串:String(null)返回null


4.转换成布尔型(Boolean())
字符串转布尔型:空字符串返回false，非空字符串返回true；
数值型转布尔型:0返回false，其他数值都返回true
特殊数据类型转布尔型:null返回false，数据对象返回true,undefined 返回false

5.字符串型转换成数值型(parseInt(), parseFloat())
(1)parseInt():从字符串的第一个字符开始验证，该字符能否转换成一个有效数值。如果不能，则返回值为NaN；如果能，将继续验证下一个字符，直到验证出这个字符不能转换成有效数值为止。如parseInt("123abc")返回123，parseInt("0xA")返回10，parseInt("12.3")返回12.
(2)parseFloat():从第一个字符开始验证，如果不能转换成数值，则显示NaN；如果能转换，则转换成数字。在parseFloat方法中，小数点是很特殊的，当第一次验证到小数点时，被验证为有效字符；当再次被验证到时，就被认为是无效字符，不参与显示。还有一点需要注意的是，浮点数只能是十进制，当验证十六进制数时，会把x或者X当成无效字符，而只返回0；当验证八进制数时，会将前面的0忽略。


6.其他数据类型转换成数值型(Number())
布尔型转换成数值型：true转换成1，false转换成0
特殊数据类型转数值型: null转换为0，undefined转换为NaN，对象数据类型转换为NaN。

7.变量作用域
在函数体内总是使用var来定义局部变量，如果不用var来定义，JavaScript将建立一个全部变量。

8.非运算符：
反码表示法规定：正数的反码与其原码相同；负数的反码是对其原码逐位取反,但符号位除外.
补码表示法规定：正数的补码与其原码相同；负数的补码是在其反码的末位加1.
例子:  ~9 的值为-10， ~-10的值为9; ~10的值为-11，~-11的值为10

9.标签跳转结构
(1)标签跳转结构语句通常会用在嵌套的循环结构语句中，为外层和内层的循环分别指明标签，并使用跳转结构语句指出要跳转的循环(个人理解：标签一般用于标记一个循环，然后break和continue作用于标签标记的循环)。
(2)当使用标签跳转结构语句时，需要注意的是，当为循环结构语句指明标签后，只有该循环内的跳转结构语句才能使用该标签(理解：其他循环结构不可使用)。

10.javascript安全发布和压缩
javascript中加入了不少注释，为了安全发布并压缩大小，可以使用JSMin进行处理。notepad中的JSTool中就有此功能。

11.调试工具
使用Firfox进行调试JavaScript。

12.Window窗口对象
(1)window窗口对象的子对象
a.document
b.event对象
c.frame对象
d.history, location
